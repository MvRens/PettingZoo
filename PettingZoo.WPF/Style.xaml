<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
                    xmlns:controls="clr-namespace:PettingZoo.WPF.Controls">
    <!-- Global styling -->
    <Style x:Key="WindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
    </Style>

    <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="8,4"/>
    </Style>

    <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
        <Setter Property="Padding" Value="3" />
    </Style>


    <!-- Explicit styling -->
    <Style x:Key="SidePanel" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
    </Style>
    
    <Style x:Key="HeaderLabel" TargetType="{x:Type Label}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveCaptionBrushKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveCaptionTextBrushKey}}"/>
    </Style>

    <Style x:Key="FooterPanel" TargetType="{x:Type Panel}">
        <Setter Property="Margin" Value="0,8,0,0" />
    </Style>

    <Style x:Key="FooterButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Margin" Value="8,0,0,0" />
    </Style>

    <Style x:Key="FooterButtonLeft" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Margin" Value="0,0,8,0" />
    </Style>


    <Style x:Key="Form" TargetType="{x:Type controls:GridLayout}">
        <Setter Property="ChildMargin" Value="4"/>
    </Style>


    <Style x:Key="Placeholder" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="6,0,0,0" />
        <Setter Property="Foreground" Value="{x:Static SystemColors.GrayTextBrush}" />
        <Setter Property="IsHitTestVisible" Value="False" />
    </Style>
    
    <Style x:Key="Properties" TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
    </Style>


    <Style x:Key="ToolbarIcon" TargetType="{x:Type Image}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.25"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="Timestamp" TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RoutingKey">
    </Style>

    <Style x:Key="TypeSelection" TargetType="{x:Type ToggleButton}">
        <Setter Property="Margin" Value="0 0 8 0" />
        <Setter Property="Padding" Value="8 4 8 4" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>


    <Style x:Key="SectionLabel" TargetType="{x:Type Label}">
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>


    <Style x:Key="Payload" TargetType="{x:Type avalonedit:TextEditor}">
        <Setter Property="FontFamily" Value="Consolas,Courier New" />
        <Setter Property="WordWrap" Value="True" />
    </Style>

    <Style x:Key="ControlBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="1" />
    </Style>
</ResourceDictionary>